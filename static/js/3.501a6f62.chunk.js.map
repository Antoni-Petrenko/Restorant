{"version":3,"sources":["components/Auth/Log.js","components/AdminPanel/AsideNavigation.js","components/AdminPanel/Menu/MenuItem.js","components/AdminPanel/Menu/CreateMenuItem.js","components/AdminPanel/Menu/DrinksMenu.js","components/AdminPanel/Menu/Menu.js","components/AdminPanel/Menu/PizzaMenu.js","components/AdminPanel/index.js","pages/admin/Admin.js"],"names":["connect","state","error","admin","isLoad","dispatch","signIn","loginCredentials","email","password","initState","useState","setLoginCredentials","handlers","input","e","copyLoginCredentials","target","name","value","submit","preventDefault","className","onSubmit","htmlFor","id","includes","type","placeholder","onChange","required","disabled","AsideNavigation","url","useRouteMatch","to","MenuItem","ing","enable","price","handleFormSubmit","handleDeletElement","handleTouched","status","isSaved","product","newItem","setNewItem","handleInput","copyItem","randId","Math","random","copyStatus","checked","href","onClick","color","CreateMenuItem","handleAddNewItem","nameInput","useRef","current","focus","ref","DrinksMenu","setState","isChanged","menuTitle","copyState","drinks","push","handleDeleteElement","splice","handleSendChanges","props","setDrinksMenu","fetchDrinksMenu","this","newState","menuSection","Object","keys","map","key","item","index","bind","Component","drinksMenu","fetchDrinks","menu","setDrinks","Menu","pizza","match","setPizzaMenu","fetchMenu","pizzaMenu","fetchPizzaMenu","setPizza","PizzaMenu","path","component","AdminPanel","iuserID","user","length"],"mappings":"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","file":"static/js/3.501a6f62.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { signIn } from \"../../store/actions/actionAdminPanel\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./styles.scss\";\r\n\r\nconst Log = ({ signIn, error, isLoad }) => {\r\n  const initState = { email: \"\", password: \"\" };\r\n  const [loginCredentials, setLoginCredentials] = useState(initState);\r\n\r\n  const handlers = {\r\n    input: e => {\r\n      const copyLoginCredentials = { ...loginCredentials };\r\n      copyLoginCredentials[e.target.name] = e.target.value;\r\n      setLoginCredentials(copyLoginCredentials);\r\n    },\r\n    submit: e => {\r\n      e.preventDefault();\r\n      signIn({ ...loginCredentials });\r\n      setLoginCredentials(initState);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"LogIn\">\r\n      <form onSubmit={handlers.submit} className=\"LogIn__form\">\r\n        <label htmlFor=\"login\">\r\n          <span>E-mail:</span>\r\n          <input\r\n            id=\"login\"\r\n            className={error.includes(\"There is no user\") ? \"error\" : \"\"}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder={\r\n              error.includes(\"There is no user\") ? \"Niepoprawny e-mail\" : \"\"\r\n            }\r\n            onChange={handlers.input}\r\n            value={loginCredentials.email}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"password\">\r\n          <span>Password:</span>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className={error.includes(\"password\") ? \"error\" : \"\"}\r\n            placeholder={error.includes(\"password\") ? \"Niepoprawne hasło\" : \"\"}\r\n            name=\"password\"\r\n            onChange={handlers.input}\r\n            value={loginCredentials.password}\r\n            required\r\n          />\r\n        </label>\r\n        <button disabled={!isLoad} className=\"LogIn__form-button\">\r\n          Zaloguj\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  error: state.admin.error,\r\n  isLoad: state.admin.isLoad\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  signIn: loginCredentials =>\r\n    dispatch(signIn(loginCredentials.email, loginCredentials.password))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Log);\r\n","import React from \"react\";\r\nimport { FaPizzaSlice, FaCoffee, FaList } from \"react-icons/fa\";\r\nimport { NavLink, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst AsideNavigation = () => {\r\n  const { url } = useRouteMatch();\r\n\r\n  return (\r\n    <aside className=\"admin-panel__navigation\">\r\n      <nav>\r\n        <ul className=\"admin-panel__navigation-list\">\r\n          <li>\r\n            <NavLink\r\n              className=\"admin-panel__navigation-link\"\r\n              to={`${url}/pizza-menu`}\r\n            >\r\n              <FaPizzaSlice />\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              className=\"admin-panel__navigation-link\"\r\n              to={`${url}/bar-menu`}\r\n            >\r\n              <FaCoffee />\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              className=\"admin-panel__navigation-link\"\r\n              to={`${url}/page-info`}\r\n            >\r\n              <FaList />\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport { AsideNavigation };\r\n","import React, { useState } from \"react\";\r\nimport { FaTimesCircle, FaTrashAlt, FaUpload } from \"react-icons/fa\";\r\nimport { MdVisibility, MdVisibilityOff } from \"react-icons/md\";\r\n\r\nconst MenuItem = ({\r\n  name,\r\n  ing,\r\n  enable,\r\n  price,\r\n  handleFormSubmit,\r\n  handleDeletElement,\r\n  handleTouched\r\n}) => {\r\n  const [newItem, setNewItem] = useState({\r\n    status: { isSaved: true },\r\n    product: { name, ing, enable, price }\r\n  });\r\n\r\n  const handleInput = e => {\r\n    const copyItem = { ...newItem };\r\n    copyItem.status.isSaved = false;\r\n    e.target.type === \"checkbox\"\r\n      ? (copyItem.product[e.target.name] = !copyItem.product[e.target.name])\r\n      : (copyItem.product[e.target.name] = e.target.value);\r\n    setNewItem(copyItem);\r\n  };\r\n\r\n  const handleSaveChange = e => {\r\n    const copyStatus = { ...newItem };\r\n    copyStatus.status.isSaved = true;\r\n    setNewItem(copyStatus);\r\n    handleFormSubmit(newItem.product, e);\r\n  };\r\n\r\n  const randId = Math.random();\r\n\r\n  return (\r\n    <form className=\"admin-menu__item\" onSubmit={handleSaveChange}>\r\n      <input\r\n        onChange={handleInput}\r\n        name=\"name\"\r\n        type=\"text\"\r\n        value={newItem.product.name}\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        onChange={handleInput}\r\n        name=\"ing\"\r\n        value={newItem.product.ing}\r\n      />\r\n      <label className=\"enable\" htmlFor={randId}>\r\n        {newItem.product.enable ? <MdVisibility /> : <MdVisibilityOff />}\r\n      </label>\r\n      <input\r\n        id={randId}\r\n        onChange={handleInput}\r\n        name=\"enable\"\r\n        type=\"checkbox\"\r\n        checked={newItem.product.enable}\r\n      />\r\n\r\n      <input\r\n        onChange={handleInput}\r\n        name=\"price\"\r\n        type=\"number\"\r\n        value={newItem.product.price}\r\n      />\r\n\r\n      <button\r\n        disabled={newItem.status.isSaved}\r\n        className=\"admin-menu__button admin-menu__button--add\"\r\n      >\r\n        Aktualizuj\r\n      </button>\r\n      <a href=\"/\" className=\"admin-menu__button\" onClick={handleDeletElement}>\r\n        <FaTrashAlt />\r\n      </a>\r\n      <span className=\"admin-menu__isUpload\">\r\n        {newItem.status.isSaved ? (\r\n          <FaUpload color=\"green\" />\r\n        ) : (\r\n          <FaTimesCircle color=\"red\" />\r\n        )}\r\n      </span>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","import React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { MdVisibility, MdVisibilityOff } from \"react-icons/md\";\r\n\r\nconst CreateMenuItem = ({ handleAddNewItem }) => {\r\n  const initState = {\r\n    product: {\r\n      name: \"\",\r\n      ing: \"\",\r\n      enable: true,\r\n      price: 0\r\n    }\r\n  };\r\n  const [newItem, setNewItem] = useState(initState);\r\n  const nameInput = useRef(null);\r\n  const handleInput = e => {\r\n    const copyItem = { ...newItem };\r\n    if (e.target.type === \"checkbox\") {\r\n      copyItem.product[e.target.name] = !copyItem.product[e.target.name];\r\n    }else if (e.target.type === \"number\"){\r\n      copyItem.product[e.target.name] = e.target.value*1\r\n    } \r\n     else {\r\n      copyItem.product[e.target.name] = e.target.value;\r\n    }\r\n    setNewItem(copyItem);\r\n  };\r\n  const handleSubmit = e => {\r\n    handleAddNewItem(newItem.product, e);\r\n    setNewItem(initState);\r\n    nameInput.current.focus();\r\n  };\r\n  const randId = Math.random();\r\n  return (\r\n    <form className=\"admin-menu__item\" onSubmit={handleSubmit}>\r\n      <input\r\n        onChange={handleInput}\r\n        name=\"name\"\r\n        type=\"text\"\r\n        value={newItem.product.name}\r\n        ref={nameInput}\r\n        placeholder=\"Nazwa\"\r\n        required\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        onChange={handleInput}\r\n        name=\"ing\"\r\n        placeholder=\"Składniki\"\r\n        value={newItem.product.ing}\r\n      />\r\n      <label className=\"enable\" htmlFor={randId}>\r\n        {newItem.product.enable ? <MdVisibility /> : <MdVisibilityOff />}\r\n      </label>\r\n      <input\r\n        onChange={handleInput}\r\n        id={randId}\r\n        name=\"enable\"\r\n        type=\"checkbox\"\r\n        checked={newItem.product.enable}\r\n      />\r\n\r\n      <input\r\n        onChange={handleInput}\r\n        name=\"price\"\r\n        type=\"number\"\r\n        placeholder=\"Cena\"\r\n        value={newItem.product.price}\r\n        required\r\n      />\r\n\r\n      <button className=\"admin-menu__button admin-menu__button--add\">Dodaj</button>\r\n      <div></div>\r\n      <div></div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateMenuItem;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  fetchDrinks,\r\n  setDrinks\r\n} from \"../../../store/actions/actionAdminPanel\";\r\nimport { connect } from \"react-redux\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport CreateMenuItem from \"./CreateMenuItem\";\r\n\r\nclass DrinksMenu extends Component {\r\n  state = {};\r\n  async componentDidMount() {\r\n    await this.props.fetchDrinksMenu();\r\n    const newState = { ...this.props.drinks };\r\n    newState.isChanged = false;\r\n    this.setState(newState);\r\n  }\r\n\r\n  handleTouched = () => {\r\n    this.setState({ isChanged: true });\r\n  };\r\n\r\n  handleFormSubmit = (menuTitle, id, newItem, e) => {\r\n    e.preventDefault();\r\n    const copyState = { ...this.state };\r\n    copyState.drinks[menuTitle][id] = newItem;\r\n    this.setState(copyState);\r\n    this.handleTouched();\r\n  };\r\n\r\n  handleAddNewItem = (menuTitle, newItem, e) => {\r\n    e.preventDefault();\r\n    this.handleTouched();\r\n    const copyState = { ...this.state };\r\n    copyState.drinks[menuTitle].push(newItem);\r\n    this.setState(copyState);\r\n    this.handleTouched();\r\n  };\r\n\r\n  handleDeleteElement = (menuTitle, id, e) => {\r\n    e.preventDefault();\r\n    const copyState = { ...this.state };\r\n    copyState.drinks[menuTitle].splice(id, 1);\r\n    this.setState(copyState);\r\n    this.handleTouched();\r\n  };\r\n\r\n  handleSendChanges = e => {\r\n    e.preventDefault();\r\n    this.props.setDrinksMenu(this.state.drinks);\r\n    this.setState({ isChanged: false });\r\n    this.props.fetchDrinksMenu();\r\n  };\r\n\r\n  render() {\r\n    const { drinks } = this.state;\r\n    const menuSection = drinks ? Object.keys(drinks) : [];\r\n    return (\r\n      <section className=\"admin-menu\">\r\n        {menuSection.map(menuTitle => (\r\n          <fieldset key={menuTitle}>\r\n            <legend>{menuTitle}</legend>\r\n            {drinks[menuTitle].map((item, index) => (\r\n              <MenuItem\r\n                key={menuTitle + item.name + index}\r\n                {...item}\r\n                handleFormSubmit={this.handleFormSubmit.bind(\r\n                  this,\r\n                  menuTitle,\r\n                  index\r\n                )}\r\n                handleDeletElement={this.handleDeleteElement.bind(\r\n                  this,\r\n                  menuTitle,\r\n                  index\r\n                )}\r\n                handleTouched={this.handleTouched}\r\n              />\r\n            ))}\r\n\r\n            <CreateMenuItem\r\n              handleAddNewItem={this.handleAddNewItem.bind(this, menuTitle)}\r\n            />\r\n\r\n            <button\r\n              disabled={!this.state.isChanged}\r\n              className=\"send-menu-button\"\r\n              onClick={this.handleSendChanges}\r\n            >\r\n              Wyślij\r\n            </button>\r\n          </fieldset>\r\n        ))}\r\n      </section>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchDrinksMenu: () => dispatch(fetchDrinks()),\r\n  setDrinksMenu: menu => dispatch(setDrinks(menu))\r\n});\r\nconst mapStateToProps = state => ({\r\n  drinks: state.admin.drinksMenu,\r\n  isLoad: state.admin.isLoad\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinksMenu);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPizzaMenu, setPizza} from \"../../../store/actions/actionAdminPanel\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport CreateMenuItem from \"./CreateMenuItem\";\r\n\r\nclass Menu extends Component {\r\n  state = {};\r\n  async componentDidMount() {\r\n    const url = this.props.match.url;\r\n    await this.props.fetchMenu(url);\r\n    const newState = { pizza: { ...this.props.menu } };\r\n    newState.isChanged = false;\r\n    this.setState(newState);\r\n  }\r\n\r\n  handleTouched = () => {\r\n    this.setState({ isChanged: true });\r\n  };\r\n\r\n  handleFormSubmit = (menuTitle, id, newItem, e) => {\r\n    e.preventDefault();\r\n    const copyState = { ...this.state };\r\n    copyState.pizza[menuTitle][id] = newItem;\r\n    this.setState(copyState);\r\n    this.handleTouched();\r\n  };\r\n\r\n  handleAddNewItem = (menuTitle, newItem, e) => {\r\n    e.preventDefault();\r\n    this.handleTouched();\r\n    const copyState = { ...this.state };\r\n    copyState.pizza[menuTitle].push(newItem);\r\n    this.setState(copyState);\r\n    this.handleTouched();\r\n  };\r\n\r\n  handleDeleteElement = (menuTitle, id, e) => {\r\n    e.preventDefault();\r\n    const copyState = { ...this.state };\r\n    copyState.pizza[menuTitle].splice(id, 1);\r\n    this.setState(copyState);\r\n    this.handleTouched();\r\n  };\r\n\r\n  handleSendChanges = e => {\r\n    e.preventDefault();\r\n    const url = this.props.match.url;\r\n    this.props.setPizzaMenu(this.state.pizza, url);\r\n    this.setState({ isChanged: false });\r\n    this.props.fetchMenu(url);\r\n  };\r\n  render() {\r\n    const { pizza } = this.state;\r\n    const menuSection = pizza ? Object.keys(pizza) : [];\r\n    return (\r\n      <section className=\"admin-menu\">\r\n        {menuSection.map(menuTitle => (\r\n          <fieldset key={menuTitle}>\r\n            <legend>{menuTitle}</legend>\r\n            {pizza[menuTitle].map((item, index) => (\r\n              <MenuItem\r\n                key={menuTitle + item.name + index}\r\n                {...item}\r\n                handleFormSubmit={this.handleFormSubmit.bind(\r\n                  this,\r\n                  menuTitle,\r\n                  index\r\n                )}\r\n                handleDeletElement={this.handleDeleteElement.bind(\r\n                  this,\r\n                  menuTitle,\r\n                  index\r\n                )}\r\n                handleTouched={this.handleTouched}\r\n              />\r\n            ))}\r\n\r\n            <CreateMenuItem\r\n              handleAddNewItem={this.handleAddNewItem.bind(this, menuTitle)}\r\n            />\r\n            <button\r\n              disabled={!this.state.isChanged}\r\n              className=\"send-menu-button\"\r\n              onClick={this.handleSendChanges}\r\n            >\r\n              Wyślij\r\n            </button>\r\n          </fieldset>\r\n        ))}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  menu: state.admin.pizzaMenu\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchMenu: url => dispatch(fetchPizzaMenu(url)),\r\n  setPizzaMenu:(menu,url)=>dispatch(setPizza(menu,url))\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Menu);\r\n","import React from \"react\";\r\nimport { NavLink, Route, useRouteMatch } from \"react-router-dom\";\r\nimport Menu from \"./Menu\";\r\n\r\nconst PizzaMenu = () => {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <>\r\n      <nav className={\"menu-navigation\"}>\r\n        <NavLink className={\"menu-navigation__button\"} to={`${url}/glutenfree`}>\r\n          Gluten Free\r\n        </NavLink>\r\n        <NavLink className={\"menu-navigation__button\"} to={`${url}/regular`}>\r\n          Zwykła pizza\r\n        </NavLink>\r\n      </nav>\r\n      <Route path={`${url}/glutenfree`} component={Menu} />\r\n      <Route path={`${url}/regular`} component={Menu} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PizzaMenu;\r\n","import React from \"react\";\r\nimport { AsideNavigation } from \"./AsideNavigation\";\r\nimport \"./styles.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport DrinksMenu from \"./Menu/DrinksMenu\";\r\nimport PizzaMenu from \"./Menu/PizzaMenu\";\r\n\r\nconst AdminPanel = () => {\r\n  return (\r\n    <>\r\n      <AsideNavigation />\r\n      <Route path=\"/admin-panel/pizza-menu\" component={PizzaMenu} />\r\n      <Route path=\"/admin-panel/bar-menu\" component={DrinksMenu} />\r\n      <Route\r\n        path=\"/admin-panel/page-info\"\r\n        component={() => (\r\n          <h1 className=\"message\">this page is under development!</h1>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Log from \"../../components/Auth/Log\";\r\nimport AdminPanel from \"../../components/AdminPanel\";\r\n\r\nconst Admin = ({ iuserID }) => {\r\n  return (\r\n    <main className=\"admin-panel\">\r\n      {iuserID.length ? <AdminPanel /> : <Log />}\r\n    </main>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  iuserID: state.admin.user\r\n});\r\nexport default connect(mapStateToProps)(Admin);\r\n"],"sourceRoot":""}