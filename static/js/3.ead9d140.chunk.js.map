{"version":3,"sources":["components/Auth/Log.js","components/AdminPanel/AsideNavigation.js","components/AdminPanel/Menu/MenuItem.js","components/AdminPanel/Menu/CreateMenuItem.js","components/AdminPanel/Menu/DrinksMenu.js","components/AdminPanel/Menu/SearchBar.js","components/AdminPanel/Menu/Menu.js","components/AdminPanel/Menu/PizzaMenu.js","components/AdminPanel/index.js","pages/admin/Admin.js"],"names":["connect","state","error","admin","isLoad","dispatch","signIn","loginCredentials","email","password","initState","useState","setLoginCredentials","handlers","input","e","copyLoginCredentials","target","name","value","submit","preventDefault","className","onSubmit","htmlFor","id","includes","type","placeholder","onChange","required","disabled","AsideNavigation","url","useRouteMatch","to","MenuItem","ing","enable","price","handleFormSubmit","handleDeletElement","status","isSaved","product","newItem","setNewItem","handleInput","copyItem","copyStatus","checked","href","onClick","bind","color","CreateMenuItem","handleAddNewItem","nameInput","useRef","randId","Math","random","current","focus","ref","DrinksMenu","handleTouched","setState","isChanged","menuTitle","prevState","copyState","drinks","find","item","index","arr","length","push","handleDeleteElement","splice","handleSendChanges","props","setDrinksMenu","fetchDrinksMenu","this","menuSection","Object","keys","map","key","Component","drinksMenu","fetchDrinks","menu","setDrinks","SearchBar","filterWord","handleSearchBar","Menu","pizza","match","setPizzaMenu","fetchMenu","filter","pizzaMenu","fetchPizzaMenu","setPizza","PizzaMenu","path","component","AdminPanel","iuserID","user","window","innerWidth"],"mappings":"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","file":"static/js/3.ead9d140.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { signIn } from \"../../store/actions/actionAdminPanel\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./styles.scss\";\r\n\r\nconst Log = ({ signIn, error, isLoad }) => {\r\n  const initState = { email: \"\", password: \"\" };\r\n  const [loginCredentials, setLoginCredentials] = useState(initState);\r\n\r\n  const handlers = {\r\n    input: e => {\r\n      const copyLoginCredentials = { ...loginCredentials };\r\n      copyLoginCredentials[e.target.name] = e.target.value;\r\n      setLoginCredentials(copyLoginCredentials);\r\n    },\r\n    submit: e => {\r\n      e.preventDefault();\r\n      signIn({ ...loginCredentials });\r\n      setLoginCredentials(initState);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"LogIn\">\r\n      <form onSubmit={handlers.submit} className=\"LogIn__form\">\r\n        <label htmlFor=\"login\">\r\n          <span>E-mail:</span>\r\n          <input\r\n            id=\"login\"\r\n            className={error.includes(\"There is no user\") ? \"error\" : \"\"}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder={\r\n              error.includes(\"There is no user\") ? \"Niepoprawny e-mail\" : \"\"\r\n            }\r\n            onChange={handlers.input}\r\n            value={loginCredentials.email}\r\n            required\r\n          />\r\n        </label>\r\n        <label htmlFor=\"password\">\r\n          <span>Password:</span>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            className={error.includes(\"password\") ? \"error\" : \"\"}\r\n            placeholder={error.includes(\"password\") ? \"Niepoprawne hasło\" : \"\"}\r\n            name=\"password\"\r\n            onChange={handlers.input}\r\n            value={loginCredentials.password}\r\n            required\r\n          />\r\n        </label>\r\n        <button disabled={!isLoad} className=\"LogIn__form-button\">\r\n          Zaloguj\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  error: state.admin.error,\r\n  isLoad: state.admin.isLoad\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  signIn: loginCredentials =>\r\n    dispatch(signIn(loginCredentials.email, loginCredentials.password))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Log);\r\n","import React from \"react\";\r\nimport { FaPizzaSlice, FaCoffee, FaList } from \"react-icons/fa\";\r\nimport { NavLink, useRouteMatch } from \"react-router-dom\";\r\n\r\nconst AsideNavigation = () => {\r\n  const { url } = useRouteMatch();\r\n\r\n  return (\r\n    <aside className=\"admin-panel__navigation\">\r\n      <nav>\r\n        <ul className=\"admin-panel__navigation-list\">\r\n          <li>\r\n            <NavLink\r\n              className=\"admin-panel__navigation-link\"\r\n              to={`${url}/pizza-menu`}\r\n            >\r\n              <FaPizzaSlice />\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              className=\"admin-panel__navigation-link\"\r\n              to={`${url}/bar-menu`}\r\n            >\r\n              <FaCoffee />\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              className=\"admin-panel__navigation-link\"\r\n              to={`${url}/page-info`}\r\n            >\r\n              <FaList />\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport { AsideNavigation };\r\n","import React, { useState } from \"react\";\r\nimport { FaTimesCircle, FaTrashAlt, FaUpload } from \"react-icons/fa\";\r\nimport { MdVisibility, MdVisibilityOff } from \"react-icons/md\";\r\n\r\nconst MenuItem = ({\r\n  name,\r\n  ing,\r\n  enable,\r\n  price,\r\n  id,\r\n  handleFormSubmit,\r\n  handleDeletElement\r\n}) => {\r\n  const [newItem, setNewItem] = useState({\r\n    status: { isSaved: true },\r\n    product: { enable, id, ing, name, price }\r\n  });\r\n\r\n  const handleInput = e => {\r\n    const copyItem = { ...newItem };\r\n    copyItem.status.isSaved = false;\r\n    if (e.target.type === \"checkbox\") {\r\n      copyItem.product[e.target.name] = !copyItem.product[e.target.name];\r\n    } else if (e.target.type === \"number\") {\r\n      copyItem.product[e.target.name] = +e.target.value;\r\n    } else {\r\n      copyItem.product[e.target.name] = e.target.value;\r\n    }\r\n    setNewItem(copyItem);\r\n  };\r\n\r\n  const handleSaveChange = e => {\r\n    const copyStatus = { ...newItem };\r\n    copyStatus.status.isSaved = true;\r\n    setNewItem(copyStatus);\r\n    handleFormSubmit(newItem.product, e);\r\n  };\r\n\r\n  return (\r\n    <form className=\"admin-menu__item\" onSubmit={handleSaveChange}>\r\n      <input\r\n        onChange={handleInput}\r\n        name=\"name\"\r\n        type=\"text\"\r\n        value={newItem.product.name}\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        onChange={handleInput}\r\n        name=\"ing\"\r\n        value={newItem.product.ing}\r\n      />\r\n      <label className=\"enable\" htmlFor={newItem.product.id}>\r\n        {newItem.product.enable ? <MdVisibility /> : <MdVisibilityOff />}\r\n      </label>\r\n      <input\r\n        id={newItem.product.id}\r\n        onChange={handleInput}\r\n        name=\"enable\"\r\n        type=\"checkbox\"\r\n        checked={newItem.product.enable}\r\n      />\r\n\r\n      <input\r\n        onChange={handleInput}\r\n        name=\"price\"\r\n        type=\"number\"\r\n        value={newItem.product.price}\r\n      />\r\n\r\n      <button\r\n        disabled={newItem.status.isSaved}\r\n        className=\"admin-menu__button admin-menu__button--add\"\r\n      >\r\n        Aktualizuj\r\n      </button>\r\n      <a href=\"/\" className=\"admin-menu__button\" onClick={handleDeletElement.bind(null,newItem.product.id)}>\r\n        <FaTrashAlt />\r\n      </a>\r\n      <span className=\"admin-menu__isUpload\">\r\n        {newItem.status.isSaved ? (\r\n          <FaUpload color=\"green\" />\r\n        ) : (\r\n          <FaTimesCircle color=\"red\" />\r\n        )}\r\n      </span>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MenuItem;\r\n","import React, { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { MdVisibility, MdVisibilityOff } from \"react-icons/md\";\r\n\r\nconst CreateMenuItem = ({ handleAddNewItem }) => {\r\n  const initState = {\r\n    product: {\r\n      name: \"\",\r\n      ing: \"\",\r\n      enable: true,\r\n      price: ''\r\n    }\r\n  };\r\n  const [newItem, setNewItem] = useState(initState);\r\n  const nameInput = useRef(null);\r\n  const handleInput = e => {\r\n    const copyItem = { ...newItem };\r\n    if (e.target.type === \"checkbox\") {\r\n      copyItem.product[e.target.name] = !copyItem.product[e.target.name];\r\n    }else if (e.target.type === \"number\"){\r\n      copyItem.product[e.target.name] = e.target.value*1\r\n    } \r\n     else {\r\n      copyItem.product[e.target.name] = e.target.value;\r\n    }\r\n    setNewItem(copyItem);\r\n  };\r\n  const handleSubmit = e => {\r\n    handleAddNewItem(newItem.product, e);\r\n    setNewItem(initState);\r\n    nameInput.current.focus();\r\n  };\r\n  const randId = Math.random();\r\n  return (\r\n    <form className=\"admin-menu__item\" onSubmit={handleSubmit}>\r\n      <input\r\n        onChange={handleInput}\r\n        name=\"name\"\r\n        type=\"text\"\r\n        value={newItem.product.name}\r\n        ref={nameInput}\r\n        placeholder=\"Nazwa\"\r\n        required\r\n      />\r\n\r\n      <input\r\n        type=\"text\"\r\n        onChange={handleInput}\r\n        name=\"ing\"\r\n        placeholder=\"Składniki\"\r\n        value={newItem.product.ing}\r\n      />\r\n      <label className=\"enable\" htmlFor={randId}>\r\n        {newItem.product.enable ? <MdVisibility /> : <MdVisibilityOff />}\r\n      </label>\r\n      <input\r\n        onChange={handleInput}\r\n        id={randId}\r\n        name=\"enable\"\r\n        type=\"checkbox\"\r\n        checked={newItem.product.enable}\r\n      />\r\n\r\n      <input\r\n        onChange={handleInput}\r\n        name=\"price\"\r\n        type=\"number\"\r\n        placeholder=\"Cena\"\r\n        value={newItem.product.price}\r\n        required\r\n      />\r\n\r\n      <button className=\"admin-menu__button admin-menu__button--add\">Dodaj</button>\r\n      <div></div>\r\n      <div></div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateMenuItem;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  fetchDrinks,\r\n  setDrinks\r\n} from \"../../../store/actions/actionAdminPanel\";\r\nimport { connect } from \"react-redux\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport CreateMenuItem from \"./CreateMenuItem\";\r\n\r\nclass DrinksMenu extends Component {\r\n  state = {};\r\n  async componentDidMount() {\r\n    await this.props.fetchDrinksMenu();\r\n    this.setState((prevState, props) => ({\r\n      ...props.drinks,\r\n      isChanged: false\r\n    }));\r\n  }\r\n\r\n  handleTouched = () => {\r\n    this.setState({ isChanged: true });\r\n  };\r\n\r\n  handleFormSubmit = (menuTitle, newItem, e) => {\r\n    e.preventDefault();\r\n    this.setState(prevState => {\r\n      const copyState = { ...prevState.drinks };\r\n      copyState[menuTitle].find((item, index, arr) => {\r\n        if (item.id === newItem.id) {\r\n          arr[index] = newItem;\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      return copyState;\r\n    }, this.handleTouched);\r\n  };\r\n\r\n  handleAddNewItem = (menuTitle, newItem, e) => {\r\n    e.preventDefault();\r\n    newItem.id = `${this.state.drinks[menuTitle].length + 1}${menuTitle}${\r\n      newItem.name\r\n    }`;\r\n\r\n    this.setState(prevState => {\r\n      const id = `${prevState.drinks[menuTitle].length + 1}${menuTitle}${\r\n        newItem.name\r\n      }`;\r\n      newItem.id = id;\r\n      const copyState = { ...prevState.drinks };\r\n      copyState[menuTitle].push(newItem);\r\n      return { drinks: copyState };\r\n    }, this.handleTouched);\r\n  };\r\n\r\n  handleDeleteElement = (menuTitle, id, e) => {\r\n    e.preventDefault();\r\n    this.setState(prevState => {\r\n      const copyState = { ...prevState };\r\n      copyState.drinks[menuTitle].find((item, index, arr) => {\r\n        if (item.id === id) {\r\n          arr.splice(index, 1);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      return copyState;\r\n    }, this.handleTouched);\r\n  };\r\n\r\n  handleSendChanges = e => {\r\n    e.preventDefault();\r\n    this.props.setDrinksMenu(this.state.drinks);\r\n    this.setState({ isChanged: false });\r\n    this.props.fetchDrinksMenu();\r\n  };\r\n\r\n  render() {\r\n    const { drinks } = this.state;\r\n    const menuSection = drinks ? Object.keys(drinks) : [];\r\n    return (\r\n      <section className=\"admin-menu\">\r\n        {menuSection.map(menuTitle => (\r\n          <fieldset key={menuTitle}>\r\n            <legend>{menuTitle}</legend>\r\n            {drinks[menuTitle].map((item, index) => (\r\n              <MenuItem\r\n                key={item.id}\r\n                {...item}\r\n                handleFormSubmit={this.handleFormSubmit.bind(this, menuTitle)}\r\n                handleDeletElement={this.handleDeleteElement.bind(\r\n                  this,\r\n                  menuTitle\r\n                )}\r\n                handleTouched={this.handleTouched}\r\n              />\r\n            ))}\r\n\r\n            <CreateMenuItem\r\n              handleAddNewItem={this.handleAddNewItem.bind(this, menuTitle)}\r\n            />\r\n\r\n            <button\r\n              disabled={!this.state.isChanged}\r\n              className=\"send-menu-button\"\r\n              onClick={this.handleSendChanges}\r\n            >\r\n              Wyślij\r\n            </button>\r\n          </fieldset>\r\n        ))}\r\n      </section>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchDrinksMenu: () => dispatch(fetchDrinks()),\r\n  setDrinksMenu: menu => dispatch(setDrinks(menu))\r\n});\r\nconst mapStateToProps = state => ({\r\n  drinks: state.admin.drinksMenu,\r\n  isLoad: state.admin.isLoad\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinksMenu);\r\n","import React from 'react'\r\n\r\nconst SearchBar = ({filterWord,handleSearchBar}) => {\r\n  return (\r\n    <fieldset >\r\n      <legend>Wyszukiwanie</legend>\r\n      <input className=\"search-bar\"\r\n          type=\"text\"\r\n          value={filterWord}\r\n          onChange={handleSearchBar}\r\n          placeholder=\"Wyszukiwanie składników:\"\r\n        />\r\n    </fieldset>\r\n  )\r\n}\r\n\r\nexport {SearchBar}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchPizzaMenu,\r\n  setPizza\r\n} from \"../../../store/actions/actionAdminPanel\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport CreateMenuItem from \"./CreateMenuItem\";\r\nimport { SearchBar } from \"./SearchBar\";\r\n\r\nclass Menu extends Component {\r\n  state = {\r\n    filterWord: \"\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const url = this.props.match.url;\r\n    await this.props.fetchMenu(url);\r\n    this.setState((prevState, props) => ({\r\n      pizza: { ...props.menu },\r\n      ...prevState\r\n    }));\r\n  }\r\n\r\n  handleTouched = () => {\r\n    this.setState({ isChanged: true });\r\n  };\r\n\r\n  handleFormSubmit = (menuTitle, newItem, e) => {\r\n    e.preventDefault();\r\n    this.setState(prevState => {\r\n      const copyState = { ...prevState.pizza };\r\n      copyState[menuTitle].find((item, index, arr) => {\r\n        if (item.id === newItem.id) {\r\n          arr[index] = newItem;\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      return copyState;\r\n    }, this.handleTouched);\r\n  };\r\n\r\n  handleAddNewItem = (menuTitle, newItem, e) => {\r\n    e.preventDefault();\r\n    this.setState(prevState => {\r\n      const id = `${prevState.pizza[menuTitle].length + 1}${menuTitle}${\r\n        newItem.name\r\n      }`;\r\n      newItem.id = id;\r\n      const copyState = { ...prevState.pizza };\r\n      copyState[menuTitle].push(newItem);\r\n      return copyState;\r\n    }, this.handleTouched);\r\n  };\r\n\r\n  handleDeleteElement = (menuTitle, id, e) => {\r\n    e.preventDefault();\r\n    this.setState(prevState => {\r\n      const copyState = { ...prevState.pizza };\r\n      copyState[menuTitle].find((item, index, arr) => {\r\n        if (item.id === id) {\r\n          arr.splice(index, 1);\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n      return copyState;\r\n    }, this.handleTouched);\r\n  };\r\n\r\n  handleSendChanges = e => {\r\n    e.preventDefault();\r\n    const url = this.props.match.url;\r\n    this.props.setPizzaMenu(this.state.pizza, url);\r\n    this.setState({ isChanged: false });\r\n    this.props.fetchMenu(url);\r\n  };\r\n  handleSearchBar = e => {\r\n    e.preventDefault();\r\n    this.setState({ filterWord: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { pizza } = this.state;\r\n    const menuSection = pizza ? Object.keys(pizza) : [];\r\n    return (\r\n      <section className=\"admin-menu\">\r\n        <SearchBar filterWord={this.state.filterWord} handleSearchBar={this.handleSearchBar} />\r\n        {menuSection.map(menuTitle => (\r\n          <fieldset key={menuTitle}>\r\n            <legend>{menuTitle}</legend>\r\n            {pizza[menuTitle]\r\n              .filter(item => item.ing.includes(this.state.filterWord))\r\n              .map((item, index) => (\r\n                <MenuItem\r\n                  key={item.id}\r\n                  {...item}\r\n                  handleFormSubmit={this.handleFormSubmit.bind(this, menuTitle)}\r\n                  handleDeletElement={this.handleDeleteElement.bind(\r\n                    this,\r\n                    menuTitle\r\n                  )}\r\n                  handleTouched={this.handleTouched}\r\n                />\r\n              ))}\r\n\r\n            <CreateMenuItem\r\n              handleAddNewItem={this.handleAddNewItem.bind(this, menuTitle)}\r\n            />\r\n            <button\r\n              disabled={!this.state.isChanged}\r\n              className=\"send-menu-button\"\r\n              onClick={this.handleSendChanges}\r\n            >\r\n              Wyślij\r\n            </button>\r\n          </fieldset>\r\n        ))}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  menu: state.admin.pizzaMenu\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchMenu: url => dispatch(fetchPizzaMenu(url)),\r\n  setPizzaMenu: (menu, url) => dispatch(setPizza(menu, url))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","import React from \"react\";\r\nimport { NavLink, Route, useRouteMatch } from \"react-router-dom\";\r\nimport Menu from \"./Menu\";\r\n\r\nconst PizzaMenu = () => {\r\n  const { url } = useRouteMatch();\r\n  return (\r\n    <>\r\n      <nav className={\"menu-navigation\"}>\r\n        <NavLink className={\"menu-navigation__button\"} to={`${url}/glutenfree`}>\r\n          Gluten Free\r\n        </NavLink>\r\n        <NavLink className={\"menu-navigation__button\"} to={`${url}/regular`}>\r\n          Zwykła pizza\r\n        </NavLink>\r\n      </nav>\r\n      <Route path={`${url}/glutenfree`} component={Menu} />\r\n      <Route path={`${url}/regular`} component={Menu} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PizzaMenu;\r\n","import React from \"react\";\r\nimport { AsideNavigation } from \"./AsideNavigation\";\r\nimport \"./styles.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nimport DrinksMenu from \"./Menu/DrinksMenu\";\r\nimport PizzaMenu from \"./Menu/PizzaMenu\";\r\n\r\nconst AdminPanel = () => {\r\n  return (\r\n    <>\r\n      <AsideNavigation />\r\n      <Route path=\"/admin-panel/pizza-menu\" component={PizzaMenu} />\r\n      <Route path=\"/admin-panel/bar-menu\" component={DrinksMenu} />\r\n      <Route\r\n        path=\"/admin-panel/page-info\"\r\n        component={() => (\r\n          <h1 className=\"message\">this page is under development!</h1>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Log from \"../../components/Auth/Log\";\r\nimport AdminPanel from \"../../components/AdminPanel\";\r\n\r\nconst Admin = ({ iuserID }) => {\r\n  const checkScreenSize = () => {\r\n    if (window.innerWidth > 767) {\r\n      return <>{iuserID.length ? <AdminPanel /> : <Log />}</>;\r\n    } else {\r\n      return (\r\n        <h2 className=\"message\">\r\n          Minimalna zalecana szerokość ekranu dla korzystania z paneli\r\n          administratora ma wynosić 767 px! Proszę wejdź z laptopa,tabletu lub\r\n          komputeru stacjonarnego .\r\n        </h2>\r\n      );\r\n    }\r\n  };\r\n  return <main className=\"admin-panel\">{checkScreenSize()}</main>;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  iuserID: state.admin.user\r\n});\r\nexport default connect(mapStateToProps)(Admin);\r\n"],"sourceRoot":""}